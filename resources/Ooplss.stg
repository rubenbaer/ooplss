group Ooplss;

javaTypeMapping ::= [
        "Int":"Integer",
        "Float":"Double",
        "Char":"Character",
        "String":"String",
        "Bool":"Boolean",
        "Void":"void"
]

typename(type) ::= <<
<if(javaTypeMapping.(type))><javaTypeMapping.(type)><else><type><endif>
>>

prog(classes) ::= <<
<classes:{class | <class>

}>
>>

classdef(name, supertype, fields, methods) ::= <<
public class <name> <if(supertype)>extends <supertype><endif> {
  <fields; separator="\n">
  <methods; separator="\n">
}
>>

method(name, params, return_type, exprs) ::= <<
  public <typename(return_type)> <name>(<params; separator=", ">) {
    <exprs; separator="\n">
  }
>>

method_param(name, type) ::= <<
<typename(type)> <name>
>>

fielddef(name, type) ::= <<
  public <typename(type)> <name>;
>>

vardef(name, type) ::= <<
<typename(type)> <name>;
>>

return(expr) ::= <<
return <expr>;
>>

assign(var, stmt) ::= <<
<var> = <stmt>;
>>

binoperator(op, left, right) ::= <<
<left> <op> <right>;
>>

member_access(left, right) ::= <<
<left>.<right>
>>

