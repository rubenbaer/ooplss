group Static : Defs;

imports() ::= <<
>>

prog(classes) ::= <<
<classes; separator="\n">
>>

app(classes, hasApplication) ::= <<
<imports()>

public class App {
  public static void main(String[] args) {
    <if(hasApplication)>
    Application app = new Application();
    app.run();
    <endif>
  }
  
  <systemclasses()>
  
  <classes; separator="\n">
}
>>

systemclasses() ::= <<
  public static class System {
    public String readln() {
			java.io.BufferedReader in = null;
      try {
        in = new java.io.BufferedReader(new java.io.InputStreamReader(java.lang.System.in));
        return in.readLine();
      } catch (java.io.IOException e) {
        java.lang.System.err.println(e.getMessage());
      } finally {
        try {
          in.close();
        } catch (java.lang.Exception e) {
          
        }
      }
      return "";
    }
    
    public String readfile(String filename) {
			java.io.BufferedReader in = null;
      try {
        java.lang.StringBuilder builder = new java.lang.StringBuilder();
        in = new java.io.BufferedReader(new java.io.FileReader(filename));
        String lastline = null;
        do {
          lastline = in.readLine();
          if (lastline != null) {
            builder.append(lastline);
          }
        } while(lastline != null);
        return builder.toString();
      } catch (java.io.IOException e) {
        java.lang.System.err.println(e.getMessage());
      } finally {
        try {
          in.close();
        } catch (java.lang.Exception e) {
          
        }
      }
      return "";
    }
    
    public void println(String str) {
      java.lang.System.out.println(str);
    }
    
    public void printlnInt(Integer i) {
      java.lang.System.out.println(i);
    }
    
    public void print(String str) {
      java.lang.System.out.println(str);
    }
  }
>>
