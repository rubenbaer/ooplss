gunit Ooplss;

@header {
package ch.codedump.ooplss.antlr;
}

superConstructorCall:
<<
A(foo)
>> -> (SUPER A (VARACCESS foo))


methodDef:
<<
def foo():bar {

}
>>  -> (METHODDEF foo (RETURNTYPE bar) ARGUMENTLIST METHODBLOCK)

<<
def __construct() {

}
>> -> (CONSTRUCTORDEF ARGUMENTLIST METHODBLOCK)

<<
def foo():bar {
	2 + 3;
	3 * 3;
}
>> -> (METHODDEF foo (RETURNTYPE bar) ARGUMENTLIST (METHODBLOCK (+ 2 3) (* 3 3)))

<<
def foo(x:y):bar {
}
>> -> (METHODDEF foo (RETURNTYPE bar) (ARGUMENTLIST (SUBTYPEARG x y)) METHODBLOCK)

/*
<<
def foo(x#y):bar {

}

>> -> (METHODDEF foo (RETURNTYPE bar) (ARGUMENTLIST (SUBCLASSARG x y)) METHODBLOCK)
*/

<<
def __construct() : foo(bar), dings(bums, foo) {}
>> -> (CONSTRUCTORDEF ARGUMENTLIST (SUPER foo (VARACCESS bar)) (SUPER dings (VARACCESS bums) (VARACCESS foo)) METHODBLOCK)


block:
<<
{
	2 + 3;
}
>> -> (BLOCK (+ 2 3))



