gunit Ooplss;

@header {
package ch.codedump.ooplss.antlr;
}

/**
 * Test some blocks
 */

block:
<<
{
	var dingsbums:foo;
}
>> OK

<<
{
	dingsbuns = 137;
}
>> OK

<<
{
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> Some changes to the ID
	dingsbums.foo("bar", 42);
}
>> OK

<<
{
<<<<<<< HEAD
=======
>>>>>>> Grammar: special method calls and block testing
=======
>>>>>>> Some changes to the ID
	18 + 37;
}
>> OK

<<
{
	blah = dingsbums.x("foo", bar);
}
>> OK

<<
{
	3;
	18 + 37;
	var dingsbums:foo;

	dingsbums = 137;
	var blah:blubb;

	blah = dingsbums.x("foo", bar);
}
>> OK

<<
{
	var d:c;
	{
		var nested:shit;

		blubber = 123123123 + 123123 * (nested.foo("haha"));
		{
			13 / 4;
		}
	}
}
>> OK
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> Grammar: some extensions

<<
{
	return foo;
}
>> OK


<<
{
	{
		return 3 + 13 * (x.y() * x.y.z());
	}

	return foo;
}
>> OK
<<<<<<< HEAD
<<<<<<< HEAD
=======
>>>>>>> Grammar: extended the grammar


<<
{
	if (a == b) {
		while (true) {
			var i:int;
			for (i = 1; i < 10; i = i + 1) {

			}
		}
	}
}
>> OK
<<<<<<< HEAD
=======
>>>>>>> Grammar: special method calls and block testing
=======
>>>>>>> Grammar: some extensions
=======
>>>>>>> Grammar: extended the grammar
